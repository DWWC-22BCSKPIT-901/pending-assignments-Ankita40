#include <stack>
#include <iostream>
using namespace std;

class MinStack {
private:
    stack<int> mainStack;  
    stack<int> minStack; 

public:
    MinStack() {
    }

    void push(int val) {
        mainStack.push(val);
        if (minStack.empty() || val <= minStack.top()) {
            minStack.push(val);
        }
    }

    void pop() {
        if (!mainStack.empty()) {
            if (mainStack.top() == minStack.top()) {
                minStack.pop();
            }
            mainStack.pop();
        }
    }

    int top() {
        if (!mainStack.empty()) {
            return mainStack.top();
        }
        return -1;
    }

    int getMin() {
       
        if (!minStack.empty()) {
            return minStack.top();
        }
        return -1; 
    }
};

int main() {
    MinStack minStack;     
    minStack.push(-2);
    minStack.push(0);
    minStack.push(-3);

    cout << minStack.getMin() << endl; // Output: -3
    minStack.pop();
    cout << minStack.top() << endl;    // Output: 0
    cout << minStack.getMin() << endl; // Output: -2

    return 0;
}
